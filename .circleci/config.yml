version: 2.1

jobs:
  create_and_deploy_front_end:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: deploy bucket.yml
          command: |
            aws cloudformation deploy --template-file aws/bucket.yml --stack-name "${CIRCLE_WORKFLOW_ID:0:7}" --parameter-overrides PipelineID="${CIRCLE_WORKFLOW_ID:0:7}"
  
  get_last_deployment_id:
    docker:
      - image: amazon/aws-cli
    steps:
      - run:
          name: query aws for the last deployment id
          command: |
            aws cloudformation list-exports --query "Exports[?Name==\'PipelineID\'].Value" --no-paginate --output text > lastID.txt
      - persist_workspace:
          root: ~/
          paths: [lastID.txt]

  promote_to_production:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: deploy cloudfront template to aws
          command: |
            aws cloudformation deploy --template-file aws/cloudfront.yml --stack-name production-distro --parameter-overrides PipelineID="${CIRCLE_WORKFLOW_ID}"

  clean_up_old_front_end:
    docker:
      - image: amazon/aws-cli
    steps:
      - attach_to_workspace:
          at: ~/
      - run:
          name: delete all files from old bucket and itself, then delete old cloudformation stack
          command: |
            aws s3 rm "s3://$(cat lastID.txt)" --recursive
            aws cloudformation delete-stack --stack-name "$(cat lastID.txt)"
workflows:
  build:
    jobs:
      - create_and_deploy_front_end
      - get_last_deployment_id:
          requires: [create_and_deploy_front_end]
      - promote_to_production:
          requires: [get_last_deployment_id]
      - clean_up_old_front_end:
          requires: [promote_to_production]